<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/search/page.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/search/page.js" />
              <option name="originalContent" value="&quot;use client&quot;;&#10;&#10;import { useMemo, useState, Suspense } from &quot;react&quot;;&#10;import { useRouter, useSearchParams } from &quot;next/navigation&quot;;&#10;import Header from &quot;../../components/Header&quot;;&#10;import Footer from &quot;../../components/Footer&quot;;&#10;import LocationSearch from &quot;../../components/LocationSearch&quot;;&#10;&#10;const OPERATORS = [&#10;  &quot;Greenline Paribahan&quot;,&#10;  &quot;Shohag Elite&quot;,&#10;  &quot;Hanif Enterprise&quot;,&#10;  &quot;ENA&quot;,&#10;  &quot;Soudia Coach&quot;,&#10;];&#10;&#10;function generateTrips({ from, to, date }) {&#10;  const baseTimes = [&#10;    &quot;07:30 AM&quot;,&#10;    &quot;10:15 AM&quot;,&#10;    &quot;01:00 PM&quot;,&#10;    &quot;04:45 PM&quot;,&#10;    &quot;08:00 PM&quot;,&#10;    &quot;10:30 PM&quot;,&#10;  ];&#10;  return baseTimes.map((t, idx) =&gt; {&#10;    const operator = OPERATORS[idx % OPERATORS.length];&#10;    const price = 450 + (idx % 3) * 50 + (operator.startsWith(&quot;G&quot;) ? 50 : 0);&#10;    const seatsLeft = 10 + ((idx * 7) % 25);&#10;    return {&#10;      id: `${operator}-${t}`,&#10;      operator,&#10;      from,&#10;      to,&#10;      date,&#10;      departureTime: t,&#10;      durationHrs: 6 + (idx % 3),&#10;      price,&#10;      seatsLeft,&#10;      coach: idx % 2 === 0 ? &quot;AC Business&quot; : &quot;Non-AC&quot;,&#10;    };&#10;  });&#10;}&#10;&#10;export default function SearchPage() {&#10;  const router = useRouter();&#10;  const sp = useSearchParams();&#10;  const from = sp.get(&quot;from&quot;) || &quot;Dhaka&quot;;&#10;  const to = sp.get(&quot;to&quot;) || &quot;Sylhet&quot;;&#10;  const date = sp.get(&quot;date&quot;) || new Date().toISOString().slice(0, 10);&#10;  const passengers = parseInt(sp.get(&quot;passengers&quot;) || &quot;1&quot;, 10);&#10;&#10;  const [operatorFilter, setOperatorFilter] = useState(&quot;all&quot;);&#10;  const [timeFilter, setTimeFilter] = useState(&quot;all&quot;);&#10;  const [sort, setSort] = useState(&quot;price-asc&quot;);&#10;&#10;  const trips = useMemo(&#10;    () =&gt; generateTrips({ from, to, date }),&#10;    [from, to, date],&#10;  );&#10;&#10;  const filtered = useMemo(() =&gt; {&#10;    let list = trips;&#10;    if (operatorFilter !== &quot;all&quot;)&#10;      list = list.filter((t) =&gt; t.operator === operatorFilter);&#10;    if (timeFilter !== &quot;all&quot;) {&#10;      list = list.filter((t) =&gt; {&#10;        const hour = parseInt(t.departureTime.split(&quot;:&quot;)[0], 10);&#10;        const isPM = t.departureTime.toLowerCase().includes(&quot;pm&quot;);&#10;        const h24 = (hour % 12) + (isPM ? 12 : 0);&#10;        if (timeFilter === &quot;morning&quot;) return h24 &gt;= 6 &amp;&amp; h24 &lt; 12;&#10;        if (timeFilter === &quot;afternoon&quot;) return h24 &gt;= 12 &amp;&amp; h24 &lt; 17;&#10;        if (timeFilter === &quot;evening&quot;) return h24 &gt;= 17 &amp;&amp; h24 &lt; 21;&#10;        if (timeFilter === &quot;night&quot;) return h24 &gt;= 21 || h24 &lt; 6;&#10;        return true;&#10;      });&#10;    }&#10;    if (sort === &quot;price-asc&quot;)&#10;      list = [...list].sort((a, b) =&gt; a.price - b.price);&#10;    if (sort === &quot;price-desc&quot;)&#10;      list = [...list].sort((a, b) =&gt; b.price - a.price);&#10;    if (sort === &quot;time-asc&quot;)&#10;      list = [...list].sort((a, b) =&gt;&#10;        a.departureTime.localeCompare(b.departureTime),&#10;      );&#10;    return list;&#10;  }, [trips, operatorFilter, timeFilter, sort]);&#10;&#10;  const selectTrip = (t) =&gt; {&#10;    try {&#10;      localStorage.setItem(&#10;        &quot;selectedTrip&quot;,&#10;        JSON.stringify({&#10;          operator: t.operator,&#10;          route: `${t.from} - ${t.to}`,&#10;          departureTime: t.departureTime,&#10;          date: t.date,&#10;          passengers,&#10;          price: t.price,&#10;          coach: t.coach,&#10;          boardingPoint: t.from,&#10;          droppingPoint: t.to,&#10;          estHours: t.durationHrs,&#10;        }),&#10;      );&#10;    } catch {}&#10;    router.push(`/#booking`);&#10;  };&#10;&#10;  return (&#10;    &lt;div className=&quot;min-h-screen bg-white flex flex-col&quot;&gt;&#10;      &lt;Header /&gt;&#10;      &lt;Suspense fallback={&lt;div&gt;Loading...&lt;/div&gt;}&gt;&#10;        &lt;main className=&quot;px-6 max-w-7xl mx-auto w-full flex-1&quot;&gt;&#10;          {/* Compact search bar */}&#10;          &lt;div className=&quot;mt-8&quot;&gt;&#10;            &lt;LocationSearch compact initial={{ from, to, date, passengers }} /&gt;&#10;          &lt;/div&gt;&#10;&#10;          {/* Filters */}&#10;          &lt;div className=&quot;mt-6 bg-white border rounded-2xl p-4 flex flex-wrap gap-3 items-center justify-between&quot;&gt;&#10;            &lt;div className=&quot;flex flex-wrap gap-3 items-center&quot;&gt;&#10;              &lt;select&#10;                value={operatorFilter}&#10;                onChange={(e) =&gt; setOperatorFilter(e.target.value)}&#10;                className=&quot;px-3 py-2 border rounded-lg&quot;&#10;              &gt;&#10;                &lt;option value=&quot;all&quot;&gt;All operators&lt;/option&gt;&#10;                {OPERATORS.map((op) =&gt; (&#10;                  &lt;option key={op} value={op}&gt;&#10;                    {op}&#10;                  &lt;/option&gt;&#10;                ))}&#10;              &lt;/select&gt;&#10;              &lt;select&#10;                value={timeFilter}&#10;                onChange={(e) =&gt; setTimeFilter(e.target.value)}&#10;                className=&quot;px-3 py-2 border rounded-lg&quot;&#10;              &gt;&#10;                &lt;option value=&quot;all&quot;&gt;Any time&lt;/option&gt;&#10;                &lt;option value=&quot;morning&quot;&gt;Morning (6-12)&lt;/option&gt;&#10;                &lt;option value=&quot;afternoon&quot;&gt;Afternoon (12-17)&lt;/option&gt;&#10;                &lt;option value=&quot;evening&quot;&gt;Evening (17-21)&lt;/option&gt;&#10;                &lt;option value=&quot;night&quot;&gt;Night (21-6)&lt;/option&gt;&#10;              &lt;/select&gt;&#10;            &lt;/div&gt;&#10;            &lt;div&gt;&#10;              &lt;select&#10;                value={sort}&#10;                onChange={(e) =&gt; setSort(e.target.value)}&#10;                className=&quot;px-3 py-2 border rounded-lg&quot;&#10;              &gt;&#10;                &lt;option value=&quot;price-asc&quot;&gt;Sort: Price (Low to High)&lt;/option&gt;&#10;                &lt;option value=&quot;price-desc&quot;&gt;Sort: Price (High to Low)&lt;/option&gt;&#10;                &lt;option value=&quot;time-asc&quot;&gt;Sort: Time (Early first)&lt;/option&gt;&#10;              &lt;/select&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;&#10;          {/* Results */}&#10;          &lt;div className=&quot;mt-6 grid grid-cols-1 lg:grid-cols-2 gap-5&quot;&gt;&#10;            {filtered.map((t) =&gt; (&#10;              &lt;div&#10;                key={t.id}&#10;                className=&quot;rounded-2xl border shadow-sm overflow-hidden&quot;&#10;              &gt;&#10;                &lt;div className=&quot;p-4 border-b bg-gray-50 flex items-center justify-between&quot;&gt;&#10;                  &lt;div&gt;&#10;                    &lt;div className=&quot;text-xs text-gray-500&quot;&gt;Operator&lt;/div&gt;&#10;                    &lt;div className=&quot;text-lg font-semibold text-black&quot;&gt;&#10;                      {t.operator}&#10;                    &lt;/div&gt;&#10;                    &lt;div className=&quot;text-gray-600 text-sm&quot;&gt;{t.coach}&lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div className=&quot;text-right&quot;&gt;&#10;                    &lt;div className=&quot;text-xs text-gray-500&quot;&gt;Departure&lt;/div&gt;&#10;                    &lt;div className=&quot;text-lg font-semibold text-black&quot;&gt;&#10;                      {t.departureTime}&#10;                    &lt;/div&gt;&#10;                    &lt;div className=&quot;text-gray-600 text-sm&quot;&gt;&#10;                      Duration ~ {t.durationHrs} hrs&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div className=&quot;p-4 grid grid-cols-2 gap-3 text-sm&quot;&gt;&#10;                  &lt;div&gt;&#10;                    &lt;div className=&quot;text-gray-500&quot;&gt;Route&lt;/div&gt;&#10;                    &lt;div className=&quot;font-semibold text-black&quot;&gt;&#10;                      {t.from} - {t.to}&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div&gt;&#10;                    &lt;div className=&quot;text-gray-500&quot;&gt;Seats left&lt;/div&gt;&#10;                    &lt;div className=&quot;font-semibold text-black&quot;&gt;&#10;                      {t.seatsLeft}&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div&gt;&#10;                    &lt;div className=&quot;text-gray-500&quot;&gt;Date&lt;/div&gt;&#10;                    &lt;div className=&quot;font-semibold text-black&quot;&gt;{t.date}&lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div className=&quot;text-right&quot;&gt;&#10;                    &lt;div className=&quot;text-gray-500&quot;&gt;Fare&lt;/div&gt;&#10;                    &lt;div className=&quot;text-2xl font-bold text-black&quot;&gt;&#10;                      BDT {t.price}&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div className=&quot;p-4 border-t flex items-center justify-end&quot;&gt;&#10;                  &lt;button&#10;                    onClick={() =&gt; selectTrip(t)}&#10;                    className=&quot;bg-green-600 text-white px-6 py-2 rounded-lg font-semibold hover:bg-green-700&quot;&#10;                  &gt;&#10;                    Select&#10;                  &lt;/button&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            ))}&#10;          &lt;/div&gt;&#10;&#10;          {filtered.length === 0 &amp;&amp; (&#10;            &lt;div className=&quot;mt-8 bg-gray-50 border border-dashed rounded-2xl p-10 text-center text-gray-600&quot;&gt;&#10;              No trips match your filters. Try changing filters or date.&#10;            &lt;/div&gt;&#10;          )}&#10;        &lt;/main&gt;&#10;      &lt;/Suspense&gt;&#10;      &lt;Footer /&gt;&#10;    &lt;/div&gt;&#10;  );&#10;}&#10;" />
              <option name="updatedContent" value="&quot;use client&quot;;&#10;&#10;import { useMemo, useState, Suspense } from &quot;react&quot;;&#10;import { useRouter, useSearchParams } from &quot;next/navigation&quot;;&#10;import Header from &quot;../../components/Header&quot;;&#10;import Footer from &quot;../../components/Footer&quot;;&#10;import LocationSearch from &quot;../../components/LocationSearch&quot;;&#10;&#10;const OPERATORS = [&#10;  &quot;Greenline Paribahan&quot;,&#10;  &quot;Shohag Elite&quot;,&#10;  &quot;Hanif Enterprise&quot;,&#10;  &quot;ENA&quot;,&#10;  &quot;Soudia Coach&quot;,&#10;];&#10;&#10;function generateTrips({ from, to, date }) {&#10;  const baseTimes = [&#10;    &quot;07:30 AM&quot;,&#10;    &quot;10:15 AM&quot;,&#10;    &quot;01:00 PM&quot;,&#10;    &quot;04:45 PM&quot;,&#10;    &quot;08:00 PM&quot;,&#10;    &quot;10:30 PM&quot;,&#10;  ];&#10;  return baseTimes.map((t, idx) =&gt; {&#10;    const operator = OPERATORS[idx % OPERATORS.length];&#10;    const price = 450 + (idx % 3) * 50 + (operator.startsWith(&quot;G&quot;) ? 50 : 0);&#10;    const seatsLeft = 10 + ((idx * 7) % 25);&#10;    return {&#10;      id: `${operator}-${t}`,&#10;      operator,&#10;      from,&#10;      to,&#10;      date,&#10;      departureTime: t,&#10;      durationHrs: 6 + (idx % 3),&#10;      price,&#10;      seatsLeft,&#10;      coach: idx % 2 === 0 ? &quot;AC Business&quot; : &quot;Non-AC&quot;,&#10;    };&#10;  });&#10;}&#10;&#10;function SearchContent() {&#10;  const router = useRouter();&#10;  const sp = useSearchParams();&#10;  const from = sp.get(&quot;from&quot;) || &quot;Dhaka&quot;;&#10;  const to = sp.get(&quot;to&quot;) || &quot;Sylhet&quot;;&#10;  const date = sp.get(&quot;date&quot;) || new Date().toISOString().slice(0, 10);&#10;  const passengers = parseInt(sp.get(&quot;passengers&quot;) || &quot;1&quot;, 10);&#10;&#10;  const [operatorFilter, setOperatorFilter] = useState(&quot;all&quot;);&#10;  const [timeFilter, setTimeFilter] = useState(&quot;all&quot;);&#10;  const [sort, setSort] = useState(&quot;price-asc&quot;);&#10;&#10;  const trips = useMemo(&#10;    () =&gt; generateTrips({ from, to, date }),&#10;    [from, to, date],&#10;  );&#10;&#10;  const filtered = useMemo(() =&gt; {&#10;    let list = trips;&#10;    if (operatorFilter !== &quot;all&quot;)&#10;      list = list.filter((t) =&gt; t.operator === operatorFilter);&#10;    if (timeFilter !== &quot;all&quot;) {&#10;      list = list.filter((t) =&gt; {&#10;        const hour = parseInt(t.departureTime.split(&quot;:&quot;)[0], 10);&#10;        const isPM = t.departureTime.toLowerCase().includes(&quot;pm&quot;);&#10;        const h24 = (hour % 12) + (isPM ? 12 : 0);&#10;        if (timeFilter === &quot;morning&quot;) return h24 &gt;= 6 &amp;&amp; h24 &lt; 12;&#10;        if (timeFilter === &quot;afternoon&quot;) return h24 &gt;= 12 &amp;&amp; h24 &lt; 17;&#10;        if (timeFilter === &quot;evening&quot;) return h24 &gt;= 17 &amp;&amp; h24 &lt; 21;&#10;        if (timeFilter === &quot;night&quot;) return h24 &gt;= 21 || h24 &lt; 6;&#10;        return true;&#10;      });&#10;    }&#10;    if (sort === &quot;price-asc&quot;)&#10;      list = [...list].sort((a, b) =&gt; a.price - b.price);&#10;    if (sort === &quot;price-desc&quot;)&#10;      list = [...list].sort((a, b) =&gt; b.price - a.price);&#10;    if (sort === &quot;time-asc&quot;)&#10;      list = [...list].sort((a, b) =&gt;&#10;        a.departureTime.localeCompare(b.departureTime),&#10;      );&#10;    return list;&#10;  }, [trips, operatorFilter, timeFilter, sort]);&#10;&#10;  const selectTrip = (t) =&gt; {&#10;    try {&#10;      localStorage.setItem(&#10;        &quot;selectedTrip&quot;,&#10;        JSON.stringify({&#10;          operator: t.operator,&#10;          route: `${t.from} - ${t.to}`,&#10;          departureTime: t.departureTime,&#10;          date: t.date,&#10;          passengers,&#10;          price: t.price,&#10;          coach: t.coach,&#10;          boardingPoint: t.from,&#10;          droppingPoint: t.to,&#10;          estHours: t.durationHrs,&#10;        }),&#10;      );&#10;    } catch {}&#10;    router.push(`/#booking`);&#10;  };&#10;&#10;  return (&#10;    &lt;main className=&quot;px-6 max-w-7xl mx-auto w-full flex-1&quot;&gt;&#10;      {/* Compact search bar */}&#10;      &lt;div className=&quot;mt-8&quot;&gt;&#10;        &lt;LocationSearch compact initial={{ from, to, date, passengers }} /&gt;&#10;      &lt;/div&gt;&#10;      {/* Filters */}&#10;      &lt;div className=&quot;mt-6 bg-white border rounded-2xl p-4 flex flex-wrap gap-3 items-center justify-between&quot;&gt;&#10;        &lt;div className=&quot;flex flex-wrap gap-3 items-center&quot;&gt;&#10;          &lt;select&#10;            value={operatorFilter}&#10;            onChange={(e) =&gt; setOperatorFilter(e.target.value)}&#10;            className=&quot;px-3 py-2 border rounded-lg&quot;&#10;          &gt;&#10;            &lt;option value=&quot;all&quot;&gt;All operators&lt;/option&gt;&#10;            {OPERATORS.map((op) =&gt; (&#10;              &lt;option key={op} value={op}&gt;&#10;                {op}&#10;              &lt;/option&gt;&#10;            ))}&#10;          &lt;/select&gt;&#10;          &lt;select&#10;            value={timeFilter}&#10;            onChange={(e) =&gt; setTimeFilter(e.target.value)}&#10;            className=&quot;px-3 py-2 border rounded-lg&quot;&#10;          &gt;&#10;            &lt;option value=&quot;all&quot;&gt;Any time&lt;/option&gt;&#10;            &lt;option value=&quot;morning&quot;&gt;Morning (6-12)&lt;/option&gt;&#10;            &lt;option value=&quot;afternoon&quot;&gt;Afternoon (12-17)&lt;/option&gt;&#10;            &lt;option value=&quot;evening&quot;&gt;Evening (17-21)&lt;/option&gt;&#10;            &lt;option value=&quot;night&quot;&gt;Night (21-6)&lt;/option&gt;&#10;          &lt;/select&gt;&#10;        &lt;/div&gt;&#10;        &lt;div&gt;&#10;          &lt;select&#10;            value={sort}&#10;            onChange={(e) =&gt; setSort(e.target.value)}&#10;            className=&quot;px-3 py-2 border rounded-lg&quot;&#10;          &gt;&#10;            &lt;option value=&quot;price-asc&quot;&gt;Price: Low to High&lt;/option&gt;&#10;            &lt;option value=&quot;price-desc&quot;&gt;Price: High to Low&lt;/option&gt;&#10;            &lt;option value=&quot;time-asc&quot;&gt;Departure Time&lt;/option&gt;&#10;          &lt;/select&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;      {/* Trip list */}&#10;      &lt;div className=&quot;mt-8 grid gap-6&quot;&gt;&#10;        {filtered.length === 0 ? (&#10;          &lt;div className=&quot;text-center py-12 text-gray-500&quot;&gt;No trips found.&lt;/div&gt;&#10;        ) : (&#10;          filtered.map((t) =&gt; (&#10;            &lt;div&#10;              key={t.id}&#10;              className=&quot;border rounded-xl p-4 flex flex-col md:flex-row items-center justify-between gap-4 shadow-sm hover:shadow-md transition cursor-pointer&quot;&#10;              onClick={() =&gt; selectTrip(t)}&#10;            &gt;&#10;              &lt;div className=&quot;flex-1 flex flex-col md:flex-row gap-4 items-center&quot;&gt;&#10;                &lt;div className=&quot;font-semibold text-lg&quot;&gt;{t.operator}&lt;/div&gt;&#10;                &lt;div className=&quot;text-gray-500&quot;&gt;{t.coach}&lt;/div&gt;&#10;                &lt;div className=&quot;text-gray-500&quot;&gt;{t.departureTime}&lt;/div&gt;&#10;                &lt;div className=&quot;text-gray-500&quot;&gt;{t.durationHrs} hrs&lt;/div&gt;&#10;                &lt;div className=&quot;text-gray-500&quot;&gt;Seats left: {t.seatsLeft}&lt;/div&gt;&#10;              &lt;/div&gt;&#10;              &lt;div className=&quot;flex flex-col items-end&quot;&gt;&#10;                &lt;div className=&quot;font-bold text-xl&quot;&gt;৳{t.price}&lt;/div&gt;&#10;                &lt;button className=&quot;mt-2 px-4 py-2 bg-blue-600 text-white rounded-lg&quot;&gt;&#10;                  Book&#10;                &lt;/button&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          ))&#10;        )}&#10;      &lt;/div&gt;&#10;    &lt;/main&gt;&#10;  );&#10;}&#10;&#10;export default function SearchPage() {&#10;  return (&#10;    &lt;div className=&quot;min-h-screen bg-white flex flex-col&quot;&gt;&#10;      &lt;Header /&gt;&#10;      &lt;Suspense fallback={&lt;div&gt;Loading...&lt;/div&gt;}&gt;&#10;        &lt;SearchContent /&gt;&#10;      &lt;/Suspense&gt;&#10;      &lt;Footer /&gt;&#10;    &lt;/div&gt;&#10;  );&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>